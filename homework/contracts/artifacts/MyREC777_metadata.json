{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "data",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "tokensReceived",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "operator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "userData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "operatorData",
						"type": "bytes"
					}
				],
				"name": "tokensToSend",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"tokensToSend(address,address,address,uint256,bytes,bytes)": {
					"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/myerc777.sol": "MyREC777"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
			"keccak256": "0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc",
			"license": "MIT",
			"urls": [
				"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3",
				"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA"
			]
		},
		"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
			"keccak256": "0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382",
			"license": "MIT",
			"urls": [
				"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18",
				"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4"
			]
		},
		"contracts/myerc777.sol": {
			"keccak256": "0xf78c05ca65fe9201f94f216b47080c78138e66e180d680356aabb9682f49b46f",
			"license": "MIT",
			"urls": [
				"bzz-raw://c591492fee683d9d32e9907c9b08c00f2489e6f8e39d114ec825a851ae480d95",
				"dweb:/ipfs/QmSjdShCwjcb256Wpfps8HgMzaRscg1697MTMP4ocxhTeW"
			]
		}
	},
	"version": 1
}