{
	"id": "c1f4c70def753bd79577970296479b72",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/myerc777.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.20;\r\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\";\r\n\r\ncontract MyREC777 is IERC777Sender,IERC777Recipient{\r\n    function tokensToSend( \r\n        address operator, \r\n        address from, \r\n        address to, \r\n        uint256 amount, \r\n        bytes calldata userData, \r\n        bytes calldata operatorData \r\n    ) \r\n    external {\r\n\r\n    }\r\n    function tokensReceived( \r\n        address operator, \r\n        address from, \r\n        address to, \r\n        uint256 amount, \r\n        bytes calldata data, \r\n        bytes calldata operatorData ) external{\r\n\r\n        }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Recipient.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n *\n * Accounts can be notified of {IERC777} tokens being sent to them by having a\n * contract implement this interface (contract holders can be their own\n * implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Recipient {\n    /**\n     * @dev Called by an {IERC777} token contract whenever tokens are being\n     * moved or created into a registered account (`to`). The type of operation\n     * is conveyed by `from` being the zero address or not.\n     *\n     * This call occurs _after_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensReceived(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC777/IERC777Sender.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n *\n * {IERC777} Token holders can be notified of operations performed on their\n * tokens by having a contract implement this interface (contract holders can be\n * their own implementer) and registering it on the\n * https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n *\n * See {IERC1820Registry} and {ERC1820Implementer}.\n */\ninterface IERC777Sender {\n    /**\n     * @dev Called by an {IERC777} token contract whenever a registered holder's\n     * (`from`) tokens are about to be moved or destroyed. The type of operation\n     * is conveyed by `to` being the zero address or not.\n     *\n     * This call occurs _before_ the token contract's state is updated, so\n     * {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n     *\n     * This function may revert to prevent the operation from being executed.\n     */\n    function tokensToSend(\n        address operator,\n        address from,\n        address to,\n        uint256 amount,\n        bytes calldata userData,\n        bytes calldata operatorData\n    ) external;\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"IERC777Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensRecipient standard as defined in the EIP. Accounts can be notified of {IERC777} tokens being sent to them by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensReceived(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever tokens are being moved or created into a registered account (`to`). The type of operation is conveyed by `from` being the zero address or not. This call occurs _after_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the post-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":\"IERC777Recipient\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"IERC777Sender": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.",
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC777TokensSender standard as defined in the EIP. {IERC777} Token holders can be notified of operations performed on their tokens by having a contract implement this interface (contract holders can be their own implementer) and registering it on the https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry]. See {IERC1820Registry} and {ERC1820Implementer}.\",\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":\"IERC777Sender\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/myerc777.sol": {
				"MyREC777": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensReceived",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "userData",
									"type": "bytes"
								},
								{
									"internalType": "bytes",
									"name": "operatorData",
									"type": "bytes"
								}
							],
							"name": "tokensToSend",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"tokensToSend(address,address,address,uint256,bytes,bytes)": {
								"details": "Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/myerc777.sol\":195:709  contract MyREC777 is IERC777Sender,IERC777Recipient{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/myerc777.sol\":195:709  contract MyREC777 is IERC777Sender,IERC777Recipient{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x23de29\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x75ab9782\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/myerc777.sol\":488:706  function tokensReceived( ... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      stop\n        /* \"contracts/myerc777.sol\":253:482  function tokensToSend( ... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_10:\n      tag_11\n      jump\t// in\n    tag_9:\n      stop\n        /* \"contracts/myerc777.sol\":488:706  function tokensReceived( ... */\n    tag_8:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/myerc777.sol\":253:482  function tokensToSend( ... */\n    tag_11:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_15:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_16:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_17:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_18:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_34\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_17\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_19:\n        /* \"#utility.yul\":641:665   */\n      tag_36\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_18\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_37\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_37:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_20:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_39\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_19\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_21:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_22:\n        /* \"#utility.yul\":997:1021   */\n      tag_42\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_21\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      dup1\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_43:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_23:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_45\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_22\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1314   */\n    tag_24:\n        /* \"#utility.yul\":1306:1307   */\n      0x00\n        /* \"#utility.yul\":1303:1304   */\n      dup1\n        /* \"#utility.yul\":1296:1308   */\n      revert\n        /* \"#utility.yul\":1320:1437   */\n    tag_25:\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1426:1427   */\n      dup1\n        /* \"#utility.yul\":1419:1431   */\n      revert\n        /* \"#utility.yul\":1443:1560   */\n    tag_26:\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1549:1550   */\n      dup1\n        /* \"#utility.yul\":1542:1554   */\n      revert\n        /* \"#utility.yul\":1579:2131   */\n    tag_27:\n        /* \"#utility.yul\":1636:1644   */\n      0x00\n        /* \"#utility.yul\":1646:1652   */\n      dup1\n        /* \"#utility.yul\":1696:1699   */\n      dup4\n        /* \"#utility.yul\":1689:1693   */\n      0x1f\n        /* \"#utility.yul\":1681:1687   */\n      dup5\n        /* \"#utility.yul\":1677:1694   */\n      add\n        /* \"#utility.yul\":1673:1700   */\n      slt\n        /* \"#utility.yul\":1663:1785   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1704:1783   */\n      tag_51\n      tag_24\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1663:1785   */\n    tag_50:\n        /* \"#utility.yul\":1817:1823   */\n      dup3\n        /* \"#utility.yul\":1804:1824   */\n      calldataload\n        /* \"#utility.yul\":1794:1824   */\n      swap1\n      pop\n        /* \"#utility.yul\":1847:1865   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1839:1845   */\n      dup2\n        /* \"#utility.yul\":1836:1866   */\n      gt\n        /* \"#utility.yul\":1833:1950   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":1869:1948   */\n      tag_53\n      tag_25\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1833:1950   */\n    tag_52:\n        /* \"#utility.yul\":1983:1987   */\n      0x20\n        /* \"#utility.yul\":1975:1981   */\n      dup4\n        /* \"#utility.yul\":1971:1988   */\n      add\n        /* \"#utility.yul\":1959:1988   */\n      swap2\n      pop\n        /* \"#utility.yul\":2037:2040   */\n      dup4\n        /* \"#utility.yul\":2029:2033   */\n      0x01\n        /* \"#utility.yul\":2021:2027   */\n      dup3\n        /* \"#utility.yul\":2017:2034   */\n      mul\n        /* \"#utility.yul\":2007:2015   */\n      dup4\n        /* \"#utility.yul\":2003:2035   */\n      add\n        /* \"#utility.yul\":2000:2041   */\n      gt\n        /* \"#utility.yul\":1997:2125   */\n      iszero\n      tag_54\n      jumpi\n        /* \"#utility.yul\":2044:2123   */\n      tag_55\n      tag_26\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1997:2125   */\n    tag_54:\n        /* \"#utility.yul\":1579:2131   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:3590   */\n    tag_7:\n        /* \"#utility.yul\":2263:2269   */\n      0x00\n        /* \"#utility.yul\":2271:2277   */\n      dup1\n        /* \"#utility.yul\":2279:2285   */\n      0x00\n        /* \"#utility.yul\":2287:2293   */\n      dup1\n        /* \"#utility.yul\":2295:2301   */\n      0x00\n        /* \"#utility.yul\":2303:2309   */\n      dup1\n        /* \"#utility.yul\":2311:2317   */\n      0x00\n        /* \"#utility.yul\":2319:2325   */\n      dup1\n        /* \"#utility.yul\":2368:2371   */\n      0xc0\n        /* \"#utility.yul\":2356:2365   */\n      dup10\n        /* \"#utility.yul\":2347:2354   */\n      dup12\n        /* \"#utility.yul\":2343:2366   */\n      sub\n        /* \"#utility.yul\":2339:2372   */\n      slt\n        /* \"#utility.yul\":2336:2456   */\n      iszero\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2375:2454   */\n      tag_58\n      tag_15\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":2336:2456   */\n    tag_57:\n        /* \"#utility.yul\":2495:2496   */\n      0x00\n        /* \"#utility.yul\":2520:2573   */\n      tag_59\n        /* \"#utility.yul\":2565:2572   */\n      dup12\n        /* \"#utility.yul\":2556:2562   */\n      dup3\n        /* \"#utility.yul\":2545:2554   */\n      dup13\n        /* \"#utility.yul\":2541:2563   */\n      add\n        /* \"#utility.yul\":2520:2573   */\n      tag_20\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":2510:2573   */\n      swap9\n      pop\n        /* \"#utility.yul\":2466:2583   */\n      pop\n        /* \"#utility.yul\":2622:2624   */\n      0x20\n        /* \"#utility.yul\":2648:2701   */\n      tag_60\n        /* \"#utility.yul\":2693:2700   */\n      dup12\n        /* \"#utility.yul\":2684:2690   */\n      dup3\n        /* \"#utility.yul\":2673:2682   */\n      dup13\n        /* \"#utility.yul\":2669:2691   */\n      add\n        /* \"#utility.yul\":2648:2701   */\n      tag_20\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":2638:2701   */\n      swap8\n      pop\n        /* \"#utility.yul\":2593:2711   */\n      pop\n        /* \"#utility.yul\":2750:2752   */\n      0x40\n        /* \"#utility.yul\":2776:2829   */\n      tag_61\n        /* \"#utility.yul\":2821:2828   */\n      dup12\n        /* \"#utility.yul\":2812:2818   */\n      dup3\n        /* \"#utility.yul\":2801:2810   */\n      dup13\n        /* \"#utility.yul\":2797:2819   */\n      add\n        /* \"#utility.yul\":2776:2829   */\n      tag_20\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":2766:2829   */\n      swap7\n      pop\n        /* \"#utility.yul\":2721:2839   */\n      pop\n        /* \"#utility.yul\":2878:2880   */\n      0x60\n        /* \"#utility.yul\":2904:2957   */\n      tag_62\n        /* \"#utility.yul\":2949:2956   */\n      dup12\n        /* \"#utility.yul\":2940:2946   */\n      dup3\n        /* \"#utility.yul\":2929:2938   */\n      dup13\n        /* \"#utility.yul\":2925:2947   */\n      add\n        /* \"#utility.yul\":2904:2957   */\n      tag_23\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":2894:2957   */\n      swap6\n      pop\n        /* \"#utility.yul\":2849:2967   */\n      pop\n        /* \"#utility.yul\":3034:3037   */\n      0x80\n        /* \"#utility.yul\":3023:3032   */\n      dup10\n        /* \"#utility.yul\":3019:3038   */\n      add\n        /* \"#utility.yul\":3006:3039   */\n      calldataload\n        /* \"#utility.yul\":3066:3084   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3058:3064   */\n      dup2\n        /* \"#utility.yul\":3055:3085   */\n      gt\n        /* \"#utility.yul\":3052:3169   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":3088:3167   */\n      tag_64\n      tag_16\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":3052:3169   */\n    tag_63:\n        /* \"#utility.yul\":3201:3265   */\n      tag_65\n        /* \"#utility.yul\":3257:3264   */\n      dup12\n        /* \"#utility.yul\":3248:3254   */\n      dup3\n        /* \"#utility.yul\":3237:3246   */\n      dup13\n        /* \"#utility.yul\":3233:3255   */\n      add\n        /* \"#utility.yul\":3201:3265   */\n      tag_27\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":3183:3265   */\n      swap5\n      pop\n      swap5\n      pop\n        /* \"#utility.yul\":2977:3275   */\n      pop\n        /* \"#utility.yul\":3342:3345   */\n      0xa0\n        /* \"#utility.yul\":3331:3340   */\n      dup10\n        /* \"#utility.yul\":3327:3346   */\n      add\n        /* \"#utility.yul\":3314:3347   */\n      calldataload\n        /* \"#utility.yul\":3374:3392   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3366:3372   */\n      dup2\n        /* \"#utility.yul\":3363:3393   */\n      gt\n        /* \"#utility.yul\":3360:3477   */\n      iszero\n      tag_66\n      jumpi\n        /* \"#utility.yul\":3396:3475   */\n      tag_67\n      tag_16\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":3360:3477   */\n    tag_66:\n        /* \"#utility.yul\":3509:3573   */\n      tag_68\n        /* \"#utility.yul\":3565:3572   */\n      dup12\n        /* \"#utility.yul\":3556:3562   */\n      dup3\n        /* \"#utility.yul\":3545:3554   */\n      dup13\n        /* \"#utility.yul\":3541:3563   */\n      add\n        /* \"#utility.yul\":3509:3573   */\n      tag_27\n      jump\t// in\n    tag_68:\n        /* \"#utility.yul\":3491:3573   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":3285:3583   */\n      pop\n        /* \"#utility.yul\":2137:3590   */\n      swap3\n      swap6\n      swap9\n      pop\n      swap3\n      swap6\n      swap9\n      swap1\n      swap4\n      swap7\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122071cabc387d67bb80dcf54a41a9363542cee431bd1b2c5aa6f14245f485aacaae64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506102798061001d5f395ff3fe608060405234801561000f575f80fd5b5060043610610033575f3560e01c806223de291461003757806375ab978214610053575b5f80fd5b610051600480360381019061004c9190610179565b61006f565b005b61006d60048036038101906100689190610179565b610079565b005b5050505050505050565b5050505050505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100b48261008b565b9050919050565b6100c4816100aa565b81146100ce575f80fd5b50565b5f813590506100df816100bb565b92915050565b5f819050919050565b6100f7816100e5565b8114610101575f80fd5b50565b5f81359050610112816100ee565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261013957610138610118565b5b8235905067ffffffffffffffff8111156101565761015561011c565b5b60208301915083600182028301111561017257610171610120565b5b9250929050565b5f805f805f805f8060c0898b03121561019557610194610083565b5b5f6101a28b828c016100d1565b98505060206101b38b828c016100d1565b97505060406101c48b828c016100d1565b96505060606101d58b828c01610104565b955050608089013567ffffffffffffffff8111156101f6576101f5610087565b5b6102028b828c01610124565b945094505060a089013567ffffffffffffffff81111561022557610224610087565b5b6102318b828c01610124565b9250925050929598509295989093965056fea264697066735822122071cabc387d67bb80dcf54a41a9363542cee431bd1b2c5aa6f14245f485aacaae64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x279 DUP1 PUSH2 0x1D PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x53 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x51 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C SWAP2 SWAP1 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST STOP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4 DUP2 PUSH2 0xAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF DUP2 PUSH2 0xBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7 DUP2 PUSH2 0xE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x112 DUP2 PUSH2 0xEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x118 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156 JUMPI PUSH2 0x155 PUSH2 0x11C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x120 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x194 PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1B3 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C4 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1D5 DUP12 DUP3 DUP13 ADD PUSH2 0x104 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x87 JUMP JUMPDEST JUMPDEST PUSH2 0x202 DUP12 DUP3 DUP13 ADD PUSH2 0x124 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x87 JUMP JUMPDEST JUMPDEST PUSH2 0x231 DUP12 DUP3 DUP13 ADD PUSH2 0x124 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xCABC387D67BB80DCF54A41A9363542CEE431 0xBD SHL 0x2C GAS 0xA6 CALL TIMESTAMP GASLIMIT DELEGATECALL DUP6 0xAA 0xCA 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:514:2:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@tokensReceived_79": {
									"entryPoint": 111,
									"id": 79,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"@tokensToSend_63": {
									"entryPoint": 121,
									"id": 63,
									"parameterSlots": 8,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_calldata_ptr": {
									"entryPoint": 292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr": {
									"entryPoint": 377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 8
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 288,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 238,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3593:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:3",
														"type": ""
													}
												],
												"src": "7:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:3",
														"type": ""
													}
												],
												"src": "334:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:3",
														"type": ""
													}
												],
												"src": "466:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "611:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "668:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "677:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "680:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "624:43:3"
															},
															"nodeType": "YulIf",
															"src": "621:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "604:5:3",
														"type": ""
													}
												],
												"src": "568:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "748:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "758:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "796:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "796:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "726:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "734:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "742:5:3",
														"type": ""
													}
												],
												"src": "696:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "886:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "896:16:3",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "907:5:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "868:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "878:7:3",
														"type": ""
													}
												],
												"src": "841:77:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "967:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1024:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "980:43:3"
															},
															"nodeType": "YulIf",
															"src": "977:63:3"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "960:5:3",
														"type": ""
													}
												],
												"src": "924:122:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1104:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1114:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1123:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1152:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:3"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1082:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1090:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1098:5:3",
														"type": ""
													}
												],
												"src": "1052:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1286:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1303:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1306:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1296:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1296:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1296:12:3"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "1197:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1409:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1426:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1419:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1419:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1419:12:3"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nodeType": "YulFunctionDefinition",
												"src": "1320:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1532:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1549:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1542:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1542:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1542:12:3"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "1443:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1653:478:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1702:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "1704:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1704:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1704:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1681:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1689:4:3",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1677:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1677:17:3"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "1696:3:3"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "1673:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1673:27:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1666:35:3"
															},
															"nodeType": "YulIf",
															"src": "1663:122:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1794:30:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1817:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1804:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:20:3"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1794:6:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1867:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nodeType": "YulIdentifier",
																				"src": "1869:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1869:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1869:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1839:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1847:18:3",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1836:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1836:30:3"
															},
															"nodeType": "YulIf",
															"src": "1833:117:3"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1959:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1975:6:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:3",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1971:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1971:17:3"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "1959:8:3"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2042:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "2044:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2044:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2044:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nodeType": "YulIdentifier",
																				"src": "2007:8:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "2021:6:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2029:4:3",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "2017:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2017:17:3"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2003:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2003:32:3"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2037:3:3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2000:2:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:41:3"
															},
															"nodeType": "YulIf",
															"src": "1997:128:3"
														}
													]
												},
												"name": "abi_decode_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1620:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1628:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "1636:8:3",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1646:6:3",
														"type": ""
													}
												],
												"src": "1579:552:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2326:1264:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2373:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2375:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2375:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2375:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2356:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2343:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2343:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2368:3:3",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2339:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "2339:33:3"
															},
															"nodeType": "YulIf",
															"src": "2336:120:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "2466:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2481:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2495:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2485:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2510:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2545:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2556:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2541:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2541:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2565:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2520:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2520:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2510:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2593:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2608:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2622:2:3",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2612:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2638:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2673:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2684:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2669:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2669:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2693:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2648:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2648:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2638:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2721:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2736:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:2:3",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2740:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2766:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2801:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2812:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2797:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2797:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2821:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2776:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2776:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2766:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2849:118:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2864:16:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2878:2:3",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2868:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2894:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2929:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2940:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2925:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2925:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2949:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2904:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2904:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2894:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2977:298:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2992:47:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3023:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3034:3:3",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3019:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3019:19:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3006:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:33:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2996:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3086:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3088:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3088:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3088:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3058:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3066:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3055:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3055:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3052:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3183:82:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3237:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3248:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3233:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3233:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3257:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3201:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3201:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "3183:6:3"
																		},
																		{
																			"name": "value5",
																			"nodeType": "YulIdentifier",
																			"src": "3191:6:3"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3285:298:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3300:47:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3331:9:3"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3342:3:3",
																						"type": "",
																						"value": "160"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3327:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3327:19:3"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "3314:12:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3314:33:3"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3304:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3394:83:3",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3396:77:3"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3396:79:3"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3396:79:3"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3366:6:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3374:18:3",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3363:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3363:30:3"
																	},
																	"nodeType": "YulIf",
																	"src": "3360:117:3"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3491:82:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3545:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3556:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3541:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3541:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3565:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_calldata_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "3509:31:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3509:64:3"
																	},
																	"variableNames": [
																		{
																			"name": "value6",
																			"nodeType": "YulIdentifier",
																			"src": "3491:6:3"
																		},
																		{
																			"name": "value7",
																			"nodeType": "YulIdentifier",
																			"src": "3499:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2240:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2251:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2263:6:3",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2271:6:3",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2279:6:3",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "2287:6:3",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "2295:6:3",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "2303:6:3",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "2311:6:3",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "2319:6:3",
														"type": ""
													}
												],
												"src": "2137:1453:3"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_calldata_ptrt_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4, value5 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 160))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value6, value7 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610033575f3560e01c806223de291461003757806375ab978214610053575b5f80fd5b610051600480360381019061004c9190610179565b61006f565b005b61006d60048036038101906100689190610179565b610079565b005b5050505050505050565b5050505050505050565b5f80fd5b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100b48261008b565b9050919050565b6100c4816100aa565b81146100ce575f80fd5b50565b5f813590506100df816100bb565b92915050565b5f819050919050565b6100f7816100e5565b8114610101575f80fd5b50565b5f81359050610112816100ee565b92915050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f84011261013957610138610118565b5b8235905067ffffffffffffffff8111156101565761015561011c565b5b60208301915083600182028301111561017257610171610120565b5b9250929050565b5f805f805f805f8060c0898b03121561019557610194610083565b5b5f6101a28b828c016100d1565b98505060206101b38b828c016100d1565b97505060406101c48b828c016100d1565b96505060606101d58b828c01610104565b955050608089013567ffffffffffffffff8111156101f6576101f5610087565b5b6102028b828c01610124565b945094505060a089013567ffffffffffffffff81111561022557610224610087565b5b6102318b828c01610124565b9250925050929598509295989093965056fea264697066735822122071cabc387d67bb80dcf54a41a9363542cee431bd1b2c5aa6f14245f485aacaae64736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x33 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0x23DE29 EQ PUSH2 0x37 JUMPI DUP1 PUSH4 0x75AB9782 EQ PUSH2 0x53 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x51 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C SWAP2 SWAP1 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x6F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x68 SWAP2 SWAP1 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x79 JUMP JUMPDEST STOP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xB4 DUP3 PUSH2 0x8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC4 DUP2 PUSH2 0xAA JUMP JUMPDEST DUP2 EQ PUSH2 0xCE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDF DUP2 PUSH2 0xBB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF7 DUP2 PUSH2 0xE5 JUMP JUMPDEST DUP2 EQ PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x112 DUP2 PUSH2 0xEE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x139 JUMPI PUSH2 0x138 PUSH2 0x118 JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x156 JUMPI PUSH2 0x155 PUSH2 0x11C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x172 JUMPI PUSH2 0x171 PUSH2 0x120 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x195 JUMPI PUSH2 0x194 PUSH2 0x83 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1A2 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP9 POP POP PUSH1 0x20 PUSH2 0x1B3 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x40 PUSH2 0x1C4 DUP12 DUP3 DUP13 ADD PUSH2 0xD1 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x60 PUSH2 0x1D5 DUP12 DUP3 DUP13 ADD PUSH2 0x104 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x80 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F6 JUMPI PUSH2 0x1F5 PUSH2 0x87 JUMP JUMPDEST JUMPDEST PUSH2 0x202 DUP12 DUP3 DUP13 ADD PUSH2 0x124 JUMP JUMPDEST SWAP5 POP SWAP5 POP POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x225 JUMPI PUSH2 0x224 PUSH2 0x87 JUMP JUMPDEST JUMPDEST PUSH2 0x231 DUP12 DUP3 DUP13 ADD PUSH2 0x124 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH18 0xCABC387D67BB80DCF54A41A9363542CEE431 0xBD SHL 0x2C GAS 0xA6 CALL TIMESTAMP GASLIMIT DELEGATECALL DUP6 0xAA 0xCA 0xAE PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "195:514:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;488:218;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;253:229;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;488:218;;;;;;;;;:::o;253:229::-;;;;;;;;;:::o;88:117:3:-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:117::-;1306:1;1303;1296:12;1320:117;1429:1;1426;1419:12;1443:117;1552:1;1549;1542:12;1579:552;1636:8;1646:6;1696:3;1689:4;1681:6;1677:17;1673:27;1663:122;;1704:79;;:::i;:::-;1663:122;1817:6;1804:20;1794:30;;1847:18;1839:6;1836:30;1833:117;;;1869:79;;:::i;:::-;1833:117;1983:4;1975:6;1971:17;1959:29;;2037:3;2029:4;2021:6;2017:17;2007:8;2003:32;2000:41;1997:128;;;2044:79;;:::i;:::-;1997:128;1579:552;;;;;:::o;2137:1453::-;2263:6;2271;2279;2287;2295;2303;2311;2319;2368:3;2356:9;2347:7;2343:23;2339:33;2336:120;;;2375:79;;:::i;:::-;2336:120;2495:1;2520:53;2565:7;2556:6;2545:9;2541:22;2520:53;:::i;:::-;2510:63;;2466:117;2622:2;2648:53;2693:7;2684:6;2673:9;2669:22;2648:53;:::i;:::-;2638:63;;2593:118;2750:2;2776:53;2821:7;2812:6;2801:9;2797:22;2776:53;:::i;:::-;2766:63;;2721:118;2878:2;2904:53;2949:7;2940:6;2929:9;2925:22;2904:53;:::i;:::-;2894:63;;2849:118;3034:3;3023:9;3019:19;3006:33;3066:18;3058:6;3055:30;3052:117;;;3088:79;;:::i;:::-;3052:117;3201:64;3257:7;3248:6;3237:9;3233:22;3201:64;:::i;:::-;3183:82;;;;2977:298;3342:3;3331:9;3327:19;3314:33;3374:18;3366:6;3363:30;3360:117;;;3396:79;;:::i;:::-;3360:117;3509:64;3565:7;3556:6;3545:9;3541:22;3509:64;:::i;:::-;3491:82;;;;3285:298;2137:1453;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "126600",
								"executionCost": "169",
								"totalCost": "126769"
							},
							"external": {
								"tokensReceived(address,address,address,uint256,bytes,bytes)": "infinite",
								"tokensToSend(address,address,address,uint256,bytes,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 195,
									"end": 709,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 709,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122071cabc387d67bb80dcf54a41a9363542cee431bd1b2c5aa6f14245f485aacaae64736f6c63430008140033",
									".code": [
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "23DE29"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "75AB9782"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 709,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 195,
											"end": 709,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 488,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 488,
											"end": 706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 253,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 488,
											"end": 706,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 488,
											"end": 706,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 253,
											"end": 482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 253,
											"end": 482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "17"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 3,
											"value": "36"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "21"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 3,
											"value": "42"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "22"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "tag",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1197,
											"end": 1314,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1307,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "tag",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1320,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1427,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1419,
											"end": 1431,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "tag",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 1443,
											"end": 1560,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1542,
											"end": 1554,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "tag",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1636,
											"end": 1644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1652,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1696,
											"end": 1699,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1689,
											"end": 1693,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 1681,
											"end": 1687,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1673,
											"end": 1700,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 1704,
											"end": 1783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "tag",
											"source": 3,
											"value": "51"
										},
										{
											"begin": 1704,
											"end": 1783,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 1663,
											"end": 1785,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1817,
											"end": 1823,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1804,
											"end": 1824,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1794,
											"end": 1824,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1847,
											"end": 1865,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1839,
											"end": 1845,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1866,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "25"
										},
										{
											"begin": 1869,
											"end": 1948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "tag",
											"source": 3,
											"value": "53"
										},
										{
											"begin": 1869,
											"end": 1948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1833,
											"end": 1950,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1983,
											"end": 1987,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1971,
											"end": 1988,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1959,
											"end": 1988,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2037,
											"end": 2040,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2029,
											"end": 2033,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2021,
											"end": 2027,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2017,
											"end": 2034,
											"name": "MUL",
											"source": 3
										},
										{
											"begin": 2007,
											"end": 2015,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 2003,
											"end": 2035,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2000,
											"end": 2041,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 2044,
											"end": 2123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "tag",
											"source": 3,
											"value": "55"
										},
										{
											"begin": 2044,
											"end": 2123,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "tag",
											"source": 3,
											"value": "54"
										},
										{
											"begin": 1997,
											"end": 2125,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1579,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2263,
											"end": 2269,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2277,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2279,
											"end": 2285,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2287,
											"end": 2293,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2303,
											"end": 2309,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2311,
											"end": 2317,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2319,
											"end": 2325,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2368,
											"end": 2371,
											"name": "PUSH",
											"source": 3,
											"value": "C0"
										},
										{
											"begin": 2356,
											"end": 2365,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2343,
											"end": 2366,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2339,
											"end": 2372,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 2375,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "tag",
											"source": 3,
											"value": "58"
										},
										{
											"begin": 2375,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 2336,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2495,
											"end": 2496,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2565,
											"end": 2572,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2556,
											"end": 2562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2541,
											"end": 2563,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2520,
											"end": 2573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 2520,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 2510,
											"end": 2573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2466,
											"end": 2583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2622,
											"end": 2624,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2693,
											"end": 2700,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2684,
											"end": 2690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2673,
											"end": 2682,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2669,
											"end": 2691,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2648,
											"end": 2701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "tag",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2648,
											"end": 2701,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 2638,
											"end": 2701,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2593,
											"end": 2711,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2750,
											"end": 2752,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2821,
											"end": 2828,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2812,
											"end": 2818,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2801,
											"end": 2810,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2797,
											"end": 2819,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 2776,
											"end": 2829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "tag",
											"source": 3,
											"value": "61"
										},
										{
											"begin": 2776,
											"end": 2829,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2766,
											"end": 2829,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2721,
											"end": 2839,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2878,
											"end": 2880,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2949,
											"end": 2956,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 2940,
											"end": 2946,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2929,
											"end": 2938,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 2925,
											"end": 2947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "23"
										},
										{
											"begin": 2904,
											"end": 2957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "tag",
											"source": 3,
											"value": "62"
										},
										{
											"begin": 2904,
											"end": 2957,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2894,
											"end": 2957,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2849,
											"end": 2967,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3034,
											"end": 3037,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 3023,
											"end": 3032,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3019,
											"end": 3038,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3006,
											"end": 3039,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3066,
											"end": 3084,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3058,
											"end": 3064,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3055,
											"end": 3085,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3088,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 3088,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 3052,
											"end": 3169,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3257,
											"end": 3264,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 3248,
											"end": 3254,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3233,
											"end": 3255,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3201,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 3201,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3183,
											"end": 3265,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2977,
											"end": 3275,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "PUSH",
											"source": 3,
											"value": "A0"
										},
										{
											"begin": 3331,
											"end": 3340,
											"name": "DUP10",
											"source": 3
										},
										{
											"begin": 3327,
											"end": 3346,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3314,
											"end": 3347,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3372,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 3363,
											"end": 3393,
											"name": "GT",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 3396,
											"end": 3475,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "tag",
											"source": 3,
											"value": "67"
										},
										{
											"begin": 3396,
											"end": 3475,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "tag",
											"source": 3,
											"value": "66"
										},
										{
											"begin": 3360,
											"end": 3477,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3565,
											"end": 3572,
											"name": "DUP12",
											"source": 3
										},
										{
											"begin": 3556,
											"end": 3562,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 3545,
											"end": 3554,
											"name": "DUP13",
											"source": 3
										},
										{
											"begin": 3541,
											"end": 3563,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "27"
										},
										{
											"begin": 3509,
											"end": 3573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "tag",
											"source": 3,
											"value": "68"
										},
										{
											"begin": 3509,
											"end": 3573,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 3491,
											"end": 3573,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 3285,
											"end": 3583,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP6",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP9",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2137,
											"end": 3590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
								"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
								"contracts/myerc777.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"tokensReceived(address,address,address,uint256,bytes,bytes)": "0023de29",
							"tokensToSend(address,address,address,uint256,bytes,bytes)": "75ab9782"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"userData\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"operatorData\",\"type\":\"bytes\"}],\"name\":\"tokensToSend\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"tokensToSend(address,address,address,uint256,bytes,bytes)\":{\"details\":\"Called by an {IERC777} token contract whenever a registered holder's (`from`) tokens are about to be moved or destroyed. The type of operation is conveyed by `to` being the zero address or not. This call occurs _before_ the token contract's state is updated, so {IERC777-balanceOf}, etc., can be used to query the pre-operation state. This function may revert to prevent the operation from being executed.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/myerc777.sol\":\"MyREC777\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol\":{\"keccak256\":\"0x1a5d61db2733202ba361e6d6741cd2e662380e22b80e987eacfc91973f2267dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04c0cd697050a6516b7779aa2343ad2d0e5217d8915ac2382681dfdf4e445be3\",\"dweb:/ipfs/QmPCBCZgm7pHBwwogE2F9NCN3UfTdLNhqc8UDEvw8kDzyA\"]},\"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol\":{\"keccak256\":\"0x742e51d63b108240759794360637468d9fcbf072cbd357744790d356a87bb382\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://23912910ce2bb68e49ff83f43fcfa864210ee44580491e876db14922f8aecc18\",\"dweb:/ipfs/QmU6GnRQ51xvY8D57kPCV47oGeYozaz5AQZUCHxFfXdFZ4\"]},\"contracts/myerc777.sol\":{\"keccak256\":\"0xf78c05ca65fe9201f94f216b47080c78138e66e180d680356aabb9682f49b46f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c591492fee683d9d32e9907c9b08c00f2489e6f8e39d114ec825a851ae480d95\",\"dweb:/ipfs/QmSjdShCwjcb256Wpfps8HgMzaRscg1697MTMP4ocxhTeW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							19
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Recipient",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "127:406:0",
								"text": " @dev Interface of the ERC777TokensRecipient standard as defined in the EIP.\n Accounts can be notified of {IERC777} tokens being sent to them by having a\n contract implement this interface (contract holders can be their own\n implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IERC777Recipient",
							"nameLocation": "544:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "567:474:0",
										"text": " @dev Called by an {IERC777} token contract whenever tokens are being\n moved or created into a registered account (`to`). The type of operation\n is conveyed by `from` being the zero address or not.\n This call occurs _after_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the post-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "0023de29",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "1055:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1087:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1079:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1079:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1113:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1105:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1135:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1127:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1127:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1155:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1147:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1186:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1171:23:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1171:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1219:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "1204:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 14,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1069:168:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1246:0:0"
									},
									"scope": 19,
									"src": "1046:201:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "534:715:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "102:1148:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC777/IERC777Sender.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
					"exportedSymbols": {
						"IERC777Sender": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 21,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC777Sender",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 22,
								"nodeType": "StructuredDocumentation",
								"src": "124:419:1",
								"text": " @dev Interface of the ERC777TokensSender standard as defined in the EIP.\n {IERC777} Token holders can be notified of operations performed on their\n tokens by having a contract implement this interface (contract holders can be\n their own implementer) and registering it on the\n https://eips.ethereum.org/EIPS/eip-1820[ERC1820 global registry].\n See {IERC1820Registry} and {ERC1820Implementer}."
							},
							"fullyImplemented": false,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "IERC777Sender",
							"nameLocation": "554:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 23,
										"nodeType": "StructuredDocumentation",
										"src": "574:478:1",
										"text": " @dev Called by an {IERC777} token contract whenever a registered holder's\n (`from`) tokens are about to be moved or destroyed. The type of operation\n is conveyed by `to` being the zero address or not.\n This call occurs _before_ the token contract's state is updated, so\n {IERC777-balanceOf}, etc., can be used to query the pre-operation state.\n This function may revert to prevent the operation from being executed."
									},
									"functionSelector": "75ab9782",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "1066:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1096:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1088:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 24,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1122:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1114:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1144:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1136:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1136:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1164:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1156:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "1195:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1180:23:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 32,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1180:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "1228:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "1213:27:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 34,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1213:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1078:168:1"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1255:0:1"
									},
									"scope": 39,
									"src": "1057:199:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 40,
							"src": "544:714:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:1160:1"
				},
				"id": 1
			},
			"contracts/myerc777.sol": {
				"ast": {
					"absolutePath": "contracts/myerc777.sol",
					"exportedSymbols": {
						"IERC777Recipient": [
							19
						],
						"IERC777Sender": [
							39
						],
						"MyREC777": [
							80
						]
					},
					"id": 81,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777Sender.sol",
							"id": 42,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 40,
							"src": "58:64:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"file": "@openzeppelin/contracts/token/ERC777/IERC777Recipient.sol",
							"id": 43,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 81,
							"sourceUnit": 20,
							"src": "124:67:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 44,
										"name": "IERC777Sender",
										"nameLocations": [
											"216:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "216:13:2"
									},
									"id": 45,
									"nodeType": "InheritanceSpecifier",
									"src": "216:13:2"
								},
								{
									"baseName": {
										"id": 46,
										"name": "IERC777Recipient",
										"nameLocations": [
											"230:16:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 19,
										"src": "230:16:2"
									},
									"id": 47,
									"nodeType": "InheritanceSpecifier",
									"src": "230:16:2"
								}
							],
							"canonicalName": "MyREC777",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 80,
							"linearizedBaseContracts": [
								80,
								19,
								39
							],
							"name": "MyREC777",
							"nameLocation": "204:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "472:10:2",
										"statements": []
									},
									"functionSelector": "75ab9782",
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensToSend",
									"nameLocation": "262:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "294:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "286:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "322:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "314:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "346:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "338:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "338:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "368:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "360:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 54,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "360:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "userData",
												"nameLocation": "401:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "386:23:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 56,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "386:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "436:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 63,
												"src": "421:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 58,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "421:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "274:182:2"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "472:0:2"
									},
									"scope": 80,
									"src": "253:229:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										18
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "692:14:2",
										"statements": []
									},
									"functionSelector": "0023de29",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokensReceived",
									"nameLocation": "497:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "531:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "523:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "523:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "559:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "551:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "551:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "583:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "575:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "575:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "605:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "597:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "597:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "638:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "623:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 72,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "623:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "operatorData",
												"nameLocation": "669:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "654:27:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 74,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "654:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "511:172:2"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "692:0:2"
									},
									"scope": 80,
									"src": "488:218:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 81,
							"src": "195:514:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "33:676:2"
				},
				"id": 2
			}
		}
	}
}